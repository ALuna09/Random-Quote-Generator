services:
  mysqldb:
    image: mysql:8.0
    container_name: mysqlcontainer
    # command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    volumes:
      - "./.mysql-data/db:/var/lib/mysql"
    ports:
      - 3306:3306
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: quotes
      MYSQL_USER: root
      MYSQL_PASSWORD: znez7a9Bk7uBinaci%vtJdg5cK
      MYSQL_ROOT_PASSWORD: znez7a9Bk7uBinaci%vtJdg5cK
      # SERVICE_TAGS: prod
      SERVICE_NAME: mysqldb
    networks:
      - internalnet

  nodeapp:
    container_name: quoteappcontainer
    build: 
      dockerfile: BDockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 8080:8080
    expose:
      - 8080
    environment:
      DB_HOST: mysqldb
      DB_PORT: 3306
      DB_USER: 'root'
      DB_PASSWORD: 'znez7a9Bk7uBinaci%vtJdg5cK'
      DB_NAME: quotes
      DB_CONNECTION_LIMIT: 20
      # SERVICE_TAGS: prod
      SERVICE_NAME: BackendQuotes
      SERVER_PORT: 8080
    depends_on:
      - mysqldb
    networks:
      - internalnet

networks:
  internalnet:
    driver: bridge

# services:

#   mysql:
#     image: mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: znez7a9Bk7uBinaci%vtJdg5cK
#       MYSQL_DATABASE: saved_quotes
#       MYSQL_USER: user
#       MYSQL_PASSWORD: znez7a9Bk7uBinaci%vtJdg5cK
#       MYSQL_HOST: localhost
#     networks:
#       - app-network
#     expose:
#       - "3306"
#     ports:
#       - "3306:3306"
#     restart: always
#     volumes:
#       - "./.mysql-data/db:/var/lib/mysql"

#   node-api:
#     build: 
#       context: .
#       dockerfile: BDockerfile
#     depends_on:
#       - mysql
#     volumes:
#       - .:/usr/src/app
#       - /usr/src/app/node_modules
#     ports:
#       - "8080:8080"
#     expose:
#       - "8080"
#     networks:
#       - app-network
#     external_links:
#       - mysql

# #Docker Networks
# networks:
#   app-network:
#     driver: bridge

# volumes:
#     db_data: {}